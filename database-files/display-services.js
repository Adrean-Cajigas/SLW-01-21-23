// FILE OVERVIEW
// this file takes services.html and adds all the services from the database to it
// this file creates an href for each service so that it will bring the user to the right application page
// then, it sends the file to be viewed by the client
// Later, this will also  sort and filter services

var React = require('react');
const fs = require('fs');
var React = require('react');
var ReactDomServer = require('react-dom/server');

// get the database information
const models = require("./define-database-models");
const Services = models.Services;

// display an individual search result
const SearchResult = function(props) {
  const service = props.service;
<<<<<<< Updated upstream:display-files/display-services.js
=======
  if (fs.existsSync('public/'+service.photo)){
    imageSrc = service.photo
  }
  else{
    imageData = service.photo.toString('base64');
    imageSrc = `data:${service.photoType};base64,${imageData}`;
  }
   
>>>>>>> Stashed changes:database-files/display-services.js
   return React.createElement('div', { className: 'result-container', id: service.title},
    React.createElement('div', { className: 'result-picture-container' },
        React.createElement('img', { className: 'result-picture', src: service.photo })
    ),
    React.createElement('div', { className: 'result-title' }, service.title),
    React.createElement('div', { className: 'result-author' }, service.author_role+": "+service.author),
    React.createElement('div', { className: 'button-container' },
        React.createElement('a', { className: 'button', href: "/apply-for-service?service=" + service.title}, 'Click for more info')
    )
  );
};

// display all search results sent from display_services
const SearchResults = function(props) {
  const results = props.results;
  return React.createElement( // make a div for the search results
    "div",
    { className: "results" },
    results.map(function(service) { // display each service
      return React.createElement(SearchResult, {
        service: service,
        key: service.title,
      });
    })
  );
};

// TODO: make this function return only the services from the foundServices array that should be shown
const search = function(allServices, keyword, filter){
  filteredData = allServices; // TODO: use 'keyword' and 'filter' to search through services
  return filteredData; 
}

// main function of this file
const display_services = function(req, res) {
  
  
  var keyword = req.query.keyword;
  var filter = req.query.filter;

  // get data from the database 
  Services.find(function(err, foundServices){
    if(!err){      
      // send array to the search function to be filtered
      filteredData = search(foundServices, keyword, filter);

      fs.readFile('public/services.html', 'utf-8', (err, data) => {
        // var "data" now contains the html contents of services.html
        
        // show any errors
        if (err) {
          console.error(err);
          return;
        }
        
        // this is referencing the SearchResults function, it writes html of each service in the
        // 'filteredData' array in the order in which they appear in the array
        var html = ReactDomServer.renderToString(React.createElement(SearchResults, { results: filteredData }));
        
        // this works by replacing the results div with the html generated by the previous line
        let divToReplace = '<div class ="results"></div>';
        let newDivContent = html;
        // replace the targeted html with the services
        let newData = data.replace(divToReplace, newDivContent);
 
        // send this html file to the client
        res.send(newData);
        });
      };
  });
};


module.exports = display_services;
